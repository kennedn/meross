#!/bin/bash
ts=0 # Supposed to be a unix epoch of the current time but can be any value
key='0' # If running in normal mode this must match the key configured during setup (can be left blank)
messageID=$(dd if=/dev/urandom bs=1 count=16 2>/dev/null | xxd -p) # Can be any value but must be unique on newer devices

help() {
  echo -e "usage: mCurl IP_ADDR METHOD NAMESPACE JSON\n"
  echo -e "simple shell wrapper for making REST calls to meross devices\n"
  echo -e "arguments:"
  echo -e "IP_ADDR\t\tmeross device ip"
  echo -e "METHOD\t\tmeross header method, [GET|SET]"
  echo -e "NAMESPACE\tmeross header namespace"
  echo -e "JSON\t\tpayload to send to namespace"
  exit 1
}
[ "${#}" != 4 ] && help

sign=$(printf "${messageID}${key}${ts}" | md5sum | awk -F\  '{print $1}')
JSON=$(jq -cn \
       --arg messageID "$messageID" \
       --arg method "$2" \
       --arg namespace "$3" \
       --arg sign "$sign" \
       --arg ts "$ts" \
       --argfile payload <(echo "${4}") \
       '{header: {from: "http://10.10.10.1/config", messageId: $messageID, method: $method, namespace: $namespace, payloadVersion: 1, sign: $sign, timestamp: $ts }, payload: $payload}' )


curl --connect-timeout 3 \
--header "Content-Type: application/json" \
--data "${JSON}" http://${1}/config
